<aura:component implements="force:appHostable,force:hasRecordId" controller="ContactController">
    
    
    <aura:attribute name="ValueStore" type="Contact[]"/>
    <!--or use:
    <aura:attribute name="ValueStore" type="list"/>
    -->
   
    <!-- lightning:select for custom picklist-->
    <lightning:select name="Lead_Source" label="Lead Source Value" required="false"
                      onchange="{!c.handleSelect}">
        <option value="">Choose one...</option>
        <option value="Social Media">Social-Media</option>
        <option value="Partner Referral">Partner-Referral</option>
        <option value="3">All</option>
    </lightning:select>
    
    <table class="slds-table slds-table_cell-buffer slds-table_bordered">
        <thead>
            <tr class="slds-line-height_reset">
                <th class="" scope="col">
                    <div class="slds-truncate" title="Opportunity Name">Contact Id</div>
                </th>
                <th class="" scope="col">
                    <div class="slds-truncate" title="Account Name">Contact Name</div>
                </th>
                <th class="" scope="col">
                    <div class="slds-truncate" title="Close Date">Email</div>
                </th>
                <th class="" scope="col">
                    <div class="slds-truncate" title="Stage">MailingStreet</div>
                </th>
                <th class="" scope="col">
                    <div class="slds-truncate" title="Stage">Lead Source</div>
                </th>
                
            </tr>
        </thead>
        <tbody>
            <aura:iteration items="{!v.ValueStore}" var="lc" indexVar="key">
               
             
                <tr class="slds-hint-parent">
                    <th data-label="Opportunity Name" scope="row">
                        <div class="slds-truncate" title="Cloudhub">
                            <a href="javascript:void(0);" tabindex="-1">{!lc.value.Id}</a>
                        </div>
                    </th>
                    <td data-label="Account Name">
                        <div class="slds-truncate" title="Cloudhub">{!lc.value.Name}</div>
                    </td>
                    <td data-label="Contact">
                        <div class="slds-truncate" title="jrogers@cloudhub.com">
                            <a href="javascript:void(0);" tabindex="-1">{!lc.value.Email}</a>
                        </div>
                    </td>
                    <td data-label="Prospecting">
                        <div class="slds-truncate" title="Prospecting">{!lc.value.MailingStreet}</div>
                    </td>
                    <td data-label="Prospecting">
                        <div class="slds-truncate" title="Prospecting">{!lc.value.LeadSource}</div>
                    </td>
                    
                    
                </tr>
            </aura:iteration>
        </tbody>
    </table>
    
    
    
    <aura:handler name="init" value="{!this}" action="{!c.LoadGenericData}"/>
    
</aura:component>

=======================================================$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$============================================================================

({
	myAction : function(component, event, helper) {
		
	},
    LoadGenericData:function(component, event, helper){
        helper.HelpLoadData(component, event, helper);
    },
    handleSelect:function(component, event, helper){
        helper.HelpLoadSelectedData(component, event, helper);
    },
    
   
    
})

======================================================$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$==============================================================================

({
    helperMethod : function() {
        
    },
    HelpLoadData:function(component,event, helper){
        console.log('inside helperLoad');
        var action=component.get("c.DisplayContact");
        //var key=component.get("v.ValueStore");
        
        console.log('action:',action);
        action.setCallback(this,function(response){
            var responseState=response.getState();
            if(responseState==='SUCCESS'){
                
                var custs = [];
                var responseValue=response.getReturnValue();
                console.log('ResponseValue:',responseValue);
                for (var key in responseValue) {
                    console.log('key:',key);
                    custs.push({value:responseValue[key], key:key});
                }
                console.log('Check Value Now:',custs);
                component.set("v.ValueStore",custs);
                console.log('Check Value Now:', component.get("v.ValueStore"));
                
            }
            
        }),
            
            $A.enqueueAction(action);   
    },
    HelpLoadSelectedData:function(component,event, helper){
        var action=event.getSource().get("v.value");  //get picklist value
        console.log('@@@ action:',action);
        if(action=='Social Media'||action=='Partner Referral'){
            var calling=component.get("c.DisplayContactOnCriteria");
            
            
            calling.setParams({
                "ParaLeadSource": action,
                
            });
            calling.setCallback(this,function(response){
                var responseState=response.getState();
                if(responseState==='SUCCESS'){
				var custs = [];
                    var responseValue=response.getReturnValue();
                    for (var key in responseValue) {
                    console.log('key:',key);
                    custs.push({value:responseValue[key], key:key});
                }
                console.log('Check Value Now:',custs);
                component.set("v.ValueStore",custs);
                }
            });
            $A.enqueueAction(calling);
        }
        else{
            this.HelpLoadData(component,event, helper);
        }
    },
    
   
    
})

========================================================$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$==========================================================================

public with sharing class ContactController {
    
    @AuraEnabled
    public static map<String,Contact> DisplayContact(){
        list<Contact> lstCon= new list<Contact>();
        map<String,Contact> mapCo= new map<String,Contact>();
        lstCon=[SELECT Id, Name, Email, MailingStreet,LeadSource FROM Contact]; 
        system.debug('LstCon:'+lstCon);
        for(Contact ct:lstCon){
           mapCo.put(ct.Id,ct); 
        }
        system.debug('MapCo:'+mapCo);
            return mapCo;
    }
    
    @AuraEnabled
    public static list<Contact> DisplayContactOnCriteria(string ParaLeadSource){
        system.debug('@@@@ Parameter: '+ParaLeadSource);
       
        list<Contact> lstCon= new list<Contact>();
        lstCon=[SELECT Id, IsDeleted, MasterRecordId, AccountId, LastName, FirstName, Salutation, Name,LeadSource FROM Contact 
                where LeadSource=:ParaLeadSource Limit 49999]; 
        system.debug('@@@@ lstCon: '+lstCon);   
        return lstCon;
    }
}
